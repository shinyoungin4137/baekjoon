//0-1 knapsack problem
#include <iostream>
#include <algorithm>
#include <cmath>
#define MAX 100001

using namespace std;

int main (){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    
    int n,k,dp[101][MAX],w[101],v[101];
    
    cin>>n>>k;
    
    for (int i=1;i<=n;i++) cin>>w[i]>>v[i];
    
    for (int i=1;i<=n;i++)
        for (int j=1;j<=k;j++){
            if (j-w[i]>=0) dp[i][j]=max(dp[i-1][j],dp[i-1][j-w[i]]+v[i]);
            else dp[i][j]=dp[i-1][j];
            
            
            
            
        }
    
    cout<<dp[n][k];
    
    
    return 0;
}
